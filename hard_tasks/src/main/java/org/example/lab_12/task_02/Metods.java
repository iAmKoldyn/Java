package org.example.lab_12.task_02;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import java.util.*;
/**
 * Class for output <b>maps</b>
 * @author Sasha Bushuev "sashabushuev03@mail.ru"
 * @version 1.0
 * @see Main
 */
public class Metods{
    /**
     * Method for generate <b>HashMap</b>
     * @param map
     */
    public void hashMap(Maps map){
        final int SEC = 1000;
        double start = System.currentTimeMillis();
        System.out.println("HashMap:");
        map.time();
        map.sum(map.mass());
        double time = System.currentTimeMillis() - start;
        System.out.println("All: " + time/SEC + " sec");
        System.out.println("-------------------------------------------------");
    }

    /**
     * Method for generate <b>TreeMap</b>
     * @param map
     */
    public void treeMap(Maps map){
        final int SEC = 1000;
        double start1 = System.currentTimeMillis();
        System.out.println("TreeMap:");
        map.generateValues();
        map.sum(map.mass());
        double time1 = System.currentTimeMillis() - start1;
        System.out.println("All: " + time1/SEC + " sec");
        System.out.println("-------------------------------------------------");
    }

    /**
     * Method for generate <b>LinkedHashMap</b>
     * @param map
     */
    public void linkedHashMap(Maps map){
        final int SEC = 1000;
        double start2 = System.currentTimeMillis();
        System.out.println("LinkedHashMap:");
        map.generateValues();
        map.sum(map.mass());
        double time2 = System.currentTimeMillis() - start2;
        System.out.println("All: " + time2/SEC + " sec");
        System.out.println("-------------------------------------------------");
    }

    /**
     * Method for generate <b>Hashtable</b>
     * @param map
     */
    public void hashtable(Maps map){
        final int SEC = 1000;
        double start3 = System.currentTimeMillis();
        System.out.println("Hashtable:");
        map.generateValues();
        map.sum(map.mass());
        double time3 = System.currentTimeMillis() - start3;
        System.out.println("All: " + time3/SEC + " sec");
        System.out.println("-------------------------------------------------");
    }
}
